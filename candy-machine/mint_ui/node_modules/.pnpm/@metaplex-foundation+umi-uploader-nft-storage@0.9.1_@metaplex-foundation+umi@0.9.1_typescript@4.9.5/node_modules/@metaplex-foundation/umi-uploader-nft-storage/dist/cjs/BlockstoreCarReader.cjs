'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

/**
 * An implementation of the CAR reader interface that is backed by a blockstore.
 * @see https://github.com/nftstorage/nft.storage/blob/0fc7e4e73867c437eac54f75f58a808dd4581c47/packages/client/src/bs-car-reader.js
 */
class BlockstoreCarReader {
  constructor(roots, blockstore, version = 1) {
    this._version = version;
    this._roots = roots;
    this._blockstore = blockstore;
  }
  get version() {
    return this._version;
  }
  get blockstore() {
    return this._blockstore;
  }
  async getRoots() {
    return this._roots;
  }
  has(cid) {
    return this._blockstore.has(cid);
  }
  async get(cid) {
    const bytes = await this._blockstore.get(cid);
    return {
      cid,
      bytes
    };
  }
  blocks() {
    return this._blockstore.blocks();
  }
  async *cids() {
    // eslint-disable-next-line no-restricted-syntax
    for await (const b of this.blocks()) {
      yield b.cid;
    }
  }
}

exports.BlockstoreCarReader = BlockstoreCarReader;
//# sourceMappingURL=BlockstoreCarReader.cjs.map
