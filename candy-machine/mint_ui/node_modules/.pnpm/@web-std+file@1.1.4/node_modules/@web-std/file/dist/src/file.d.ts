/**
 * @implements {globalThis.File}
 */
export const WebFile: {
    new (init: BlobPart[], name?: string, options?: FilePropertyBag | undefined): {
        /** @private */
        _name: string;
        /** @private */
        _lastModified: number;
        /**
         * The name of the file referenced by the File object.
         * @type {string}
         */
        readonly name: string;
        /**
         * The path the URL of the File is relative to.
         * @type {string}
         */
        readonly webkitRelativePath: string;
        /**
         * Returns the last modified time of the file, in millisecond since the UNIX
         * epoch (January 1st, 1970 at Midnight).
         * @returns {number}
         */
        readonly lastModified: number;
        readonly [Symbol.toStringTag]: string;
        readonly size: number;
        readonly type: string;
        arrayBuffer(): Promise<ArrayBuffer>;
        slice(start?: number | undefined, end?: number | undefined, contentType?: string | undefined): Blob;
        stream(): ReadableStream<any>;
        text(): Promise<string>;
    };
};
//# sourceMappingURL=file.d.ts.map